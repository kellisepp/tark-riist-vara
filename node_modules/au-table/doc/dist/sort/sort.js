"use strict";

System.register(["aurelia-fetch-client"], function (_export, _context) {
    "use strict";

    var HttpClient, SortCustomElement;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [function (_aureliaFetchClient) {
            HttpClient = _aureliaFetchClient.HttpClient;
        }],
        execute: function () {
            _export("SortCustomElement", SortCustomElement = function () {
                function SortCustomElement() {
                    _classCallCheck(this, SortCustomElement);

                    this.open = "${";
                    this.users = [];
                }

                SortCustomElement.prototype.bind = function bind() {
                    var _this = this;

                    var client = new HttpClient();

                    return client.fetch('data.json').then(function (response) {
                        return response.json();
                    }).then(function (users) {
                        return _this.users = users.slice(1, 10);
                    });
                };

                SortCustomElement.prototype.nameLength = function nameLength(row) {
                    return row.name.length;
                };

                SortCustomElement.prototype.dateSort = function dateSort(a, b, sortOrder) {
                    var date1 = new Date(a.registered);
                    var date2 = new Date(b.registered);

                    if (date1 === date2) {
                        return 0;
                    }

                    if (date1 > date2) {
                        return 1 * sortOrder;
                    }

                    return -1 * sortOrder;
                };

                return SortCustomElement;
            }());

            _export("SortCustomElement", SortCustomElement);
        }
    };
});
//# sourceMappingURL=sort.js.map
